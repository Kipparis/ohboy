# zsh info {{{
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/kip/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="af-magic"
ZSH_THEME="avit"
# ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# }}}

# automatic aftorisation for ssh
    # mkdir ~/.ssh
    # ssh-keygen -t rsa -q -N '' -f ~/.ssh/id_rsa
    # ssh-copy-id -i ~/.ssh/id_rsa.pub user@remote.org.ua
    # ssh user@remoute.org.ua

# Wacom aliases
# TODO: move to script with calculating ratio
# xrandr
alias wacom_map_to_big='xsetwacom set "Wacom Bamboo One M Pen stylus" \
  MapToOutput HEAD-0'   
# alias wacom_map_to_big='xsetwacom set "Wacom Bamboo One M Pen stylus" MapToOutput DVI-D-2 '
alias wacom_map_to_small='xsetwacom set "Wacom Bamboo One M Pen stylus" \
  MapToOutput HEAD-1'

# midi synth alias sound="qsynth"

# check for RAM (system lag while several applications are opened)
# free -h
#
# slow boot time or application first time launch
# hdparm -t /deb/sdX
#
# CPU load is hign even with enough RAM available =>
# disable running daemons and/or processes
# htop
# pstree
# or another system monitoring tool
#
# direct rendering are slow (GPU part)
# check if direct rendering enabled:
# glxinfo | grep "direct rendering"
#
# check for drivers
# lspci -v
# lspci -k | grep -A 2 -E "(VGA|3D)"
#
# header number
# uname -r
#
# blacklist old GPU driver (open source)
# sudo nvim /etc/modprobe.d/nouveau_blacklist.conf  

alias dev="cd ~/files/proj/nextgen/levelteleg && source venv/bin/activate && cd base"

alias ka="nvim"

# unmout encrypted fs
# fusermount -u ~/encrypted
# mount again
# encfs ~/.encrypted ~/encrypted


# ~~~ Stream Section ~~~ {{{
alias twitch_chat='chromium --app=https://www.twitch.tv/popout/kipparis49/chat\?popout\='
alias restream_chat='chromium --app=https://chat.restream.io/chat'
# }}}
#~~~ Just Cool Shit ~~~#{{{
# spawn cute animal that follows cursor
    # oneko
# Animated wallpaper
    # xwinwrap -g 1920x1080+1280 -ov -ni -s -nf -- gifview -w WID 1.gif -a
alias visualize_micro="python3 $HOME/.scripts/spectrogram.py -g 160 -d pulse"
# }}}
#~~~ System Maintaining ~~~{{{
# Memory{{{

	# out installed packages with size
	# indi packages
# pacman -Qi | awk '/^Name/{name=$3} /^Installed Size/{print $4$5, name}' | sort -h
	# clear cache 
# paccache -rk 2	# set level of clearing
# sudo paccache -ruk0  	# remove all unused packages cache
	# check size
# du -sh /var/cache/pacman/pkg/
	# hook for removing that automatically
# /etc/pacman.d/hooks/clean_package_cache.hook	# just to remember where

# }}}
# Graphics{{{
	# default monitor
alias set_default_monitor='xrandr --output DVI-D-1 --primary --right-of VGA-0'
#}}}

# }}}
# ~~~ Colors ~~~ {{{
# Where to change colors:
#   .config/i3status/config - bottom statusline
#   gtk themes - windows - lxappearence
#   .Xresources - terminal
#   .i3/config - takes colors from .Xresources

# COLORS FOR NTFS FILES
# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors ~/.mydircolors`"
    alias ls='ls --color=auto'
    #alias dir='ls --color=auto --format=vertical'
    #alias vdir='ls --color=auto --format=long'
fi

# Import colorscheme from 'wal' asynchronously
# &   # Run the process in the background.
# ( ) # Hide shell job control messages.
(cat ~/.cache/wal/sequences &)
# }}}
# ~~~ Font ~~~ # {{{
	#--- generate full nerd font
# fontforge -script ~/files/progs/nerd-fonts/font-patcher ~/.local/share/fonts/FiraCode-Regular.otf --fontawesome --fontawesomeextension --fontlinux --octicons --powersymbols --pomicons --powerline --powerlineextra --material --weather
	#--- place fallback fontconfig in 
# ls /etc/fonts/conf.d/
# or
# $GDG_CONFIG_HOME/fontconfig/conf.d/
	#--- check for specific char presented in font
# gucharmap
	#--- check in witch fonts char is presented
# perl ~/.scripts/test-fonts.pl "<glyph>"
# }}}
# ~~~ Music ~~~ {{{
	# start mpd
# systemctl --user start mpd
	# enable mpd on login
# systemctl --user enable mpd
	# edit music tags
# easytag

mp3towav(){	# convert mp3 to wav
	[[ $# -eq 0 ]] && { echo "mp3wav mp3file"; exit 1; }
	for i in "$@"
	do
		# create .wav file name
		local out="${i%/*}.wav"
		[[ -f "$i" ]] && { echo -n "Processing ${i}..."; mpg123 -w "${out}" "$i" &>/dev/null  && echo "done." || echo "failed."; }
	done	
}
# }}}
# ~~~ Variables ~~~ {{{ 
# HISTFILE # location of history file for bash
# readline in .inputrc 
# or 
set -o vi	# vi editing mode

# for programs to search for libs
LD_LIBRARY_PATH="/usr/local/lib"

# for X resources to find config files
XDG_CONFIG_HOME="/home/kip/.config"

# for ranger
export EDITOR=nvim
VISUAL=nvim; export VISUAL EDITOR=nvim; export EDITOR
RANGER_LOAD_DEFAULT_RC=0

# autogenerated
PATH="/home/kip/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/kip/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/kip/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/kip/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/kip/perl5"; export PERL_MM_OPT;
# }}} 
# useful aliases | system aliases {{{
alias turn_off_bell='xset -b'
alias set_local_time='sudo ntpd -qg'
alias fix_time='timedatectl set-ntp true'
alias remove_cached='git rm -r --cached .'
# view files for package
    # pacman -Ql st
# }}}
# programms in use {{{
alias video_recorder="simplescreenrecorder"
alias show_keys="screenkey" # --scr 1 for showing on big screen
alias music_player="ario"
# }}}

# when run command from terminal
# C-z => bg => disown
